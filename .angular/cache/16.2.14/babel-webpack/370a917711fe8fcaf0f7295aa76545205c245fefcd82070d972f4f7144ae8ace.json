{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/forms\";\nexport class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\nexport class CreateAccountComponent {\n  constructor() {\n    this.emailFormControl = new FormControl('', [Validators.required, Validators.email]);\n    this.matcher = new MyErrorStateMatcher();\n  }\n  createAccount(username, password1, password2) {}\n  static #_ = this.ɵfac = function CreateAccountComponent_Factory(t) {\n    return new (t || CreateAccountComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAccountComponent,\n    selectors: [[\"app-create-account\"]],\n    decls: 18,\n    vars: 2,\n    consts: [[1, \"login\"], [1, \"full-width\"], [\"matInput\", \"\", 3, \"formControl\", \"errorStateMatcher\"], [\"username\", \"\"], [\"matInput\", \"\", \"type\", \"password\"], [\"password1\", \"\"], [\"password2\", \"\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function CreateAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2, 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\", 1)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4, 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 1)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Re-Enter Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 4, 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CreateAccountComponent_Template_button_click_16_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r0 = i0.ɵɵreference(5);\n          const _r1 = i0.ɵɵreference(10);\n          const _r2 = i0.ɵɵreference(15);\n          return i0.ɵɵresetView(ctx.createAccount(_r0.value, _r1.value, _r2.value));\n        });\n        i0.ɵɵtext(17, \"Create Account\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.emailFormControl)(\"errorStateMatcher\", ctx.matcher);\n      }\n    },\n    dependencies: [i1.MatButton, i2.MatInput, i3.MatFormField, i3.MatLabel, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgForm],\n    styles: [\".login[_ngcontent-%COMP%] {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n.full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtYWNjb3VudC9jcmVhdGUtYWNjb3VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0FBRUY7SUFDSSxXQUFXO0VBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4ge1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbi5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","MyErrorStateMatcher","isErrorState","control","form","isSubmitted","submitted","invalid","dirty","touched","CreateAccountComponent","constructor","emailFormControl","required","email","matcher","createAccount","username","password1","password2","_","_2","selectors","decls","vars","consts","template","CreateAccountComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","CreateAccountComponent_Template_button_click_16_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","_r1","_r2","ɵɵresetView","value","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\components\\create-account\\create-account.component.ts","C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\components\\create-account\\create-account.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css']\n})\n\nexport class CreateAccountComponent {\n  emailFormControl = new FormControl('', [Validators.required, Validators.email]);\n  matcher = new MyErrorStateMatcher();\n  createAccount(username: string, password1: string, password2: string ) {\n\n  }\n\n}\n","<form class=\"login\">\n    <mat-form-field class=\"full-width\">\n      <mat-label>Username</mat-label>\n      <input matInput [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\" #username>\n    </mat-form-field>\n  \n    <mat-form-field class=\"full-width\">\n      <mat-label>Password</mat-label>\n      <input matInput type=password #password1>\n    </mat-form-field>\n    <mat-form-field class=\"full-width\">\n        <mat-label>Re-Enter Password</mat-label>\n        <input matInput type=password #password2>\n      </mat-form-field>\n    <button mat-stroked-button color=\"primary\" (click)=\"createAccount(username.value, password1.value, password2.value)\">Create Account</button>\n  </form>"],"mappings":"AACA,SACEA,WAAW,EAGXC,UAAU,QAGL,gBAAgB;;;;;;AAKvB,OAAM,MAAOC,mBAAmB;EAC9BC,YAAYA,CAACC,OAA2B,EAAEC,IAAwC;IAChF,MAAMC,WAAW,GAAGD,IAAI,IAAIA,IAAI,CAACE,SAAS;IAC1C,OAAO,CAAC,EAAEH,OAAO,IAAIA,OAAO,CAACI,OAAO,KAAKJ,OAAO,CAACK,KAAK,IAAIL,OAAO,CAACM,OAAO,IAAIJ,WAAW,CAAC,CAAC;EAC5F;;AASF,OAAM,MAAOK,sBAAsB;EANnCC,YAAA;IAOE,KAAAC,gBAAgB,GAAG,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACc,KAAK,CAAC,CAAC;IAC/E,KAAAC,OAAO,GAAG,IAAId,mBAAmB,EAAE;;EACnCe,aAAaA,CAACC,QAAgB,EAAEC,SAAiB,EAAEC,SAAiB,GAEpE;EAAC,QAAAC,CAAA,G;qBALUV,sBAAsB;EAAA;EAAA,QAAAW,EAAA,G;UAAtBX,sBAAsB;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QC1BnCE,EAAA,CAAAC,cAAA,cAAoB;QAEHD,EAAA,CAAAE,MAAA,eAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAC/BH,EAAA,CAAAI,SAAA,kBAAyF;QAC3FJ,EAAA,CAAAG,YAAA,EAAiB;QAEjBH,EAAA,CAAAC,cAAA,wBAAmC;QACtBD,EAAA,CAAAE,MAAA,eAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAC/BH,EAAA,CAAAI,SAAA,kBAAyC;QAC3CJ,EAAA,CAAAG,YAAA,EAAiB;QACjBH,EAAA,CAAAC,cAAA,yBAAmC;QACpBD,EAAA,CAAAE,MAAA,yBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAY;QACxCH,EAAA,CAAAI,SAAA,mBAAyC;QAC3CJ,EAAA,CAAAG,YAAA,EAAiB;QACnBH,EAAA,CAAAC,cAAA,iBAAqH;QAA1ED,EAAA,CAAAK,UAAA,mBAAAC,yDAAA;UAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAT,EAAA,CAAAU,WAAA;UAAA,MAAAC,GAAA,GAAAX,EAAA,CAAAU,WAAA;UAAA,MAAAE,GAAA,GAAAZ,EAAA,CAAAU,WAAA;UAAA,OAASV,EAAA,CAAAa,WAAA,CAAAd,GAAA,CAAAb,aAAA,CAAAuB,GAAA,CAAAK,KAAA,EAAAH,GAAA,CAAAG,KAAA,EAAAF,GAAA,CAAAE,KAAA,CAA+D;QAAA,EAAC;QAACd,EAAA,CAAAE,MAAA,sBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAX1HH,EAAA,CAAAe,SAAA,GAAgC;QAAhCf,EAAA,CAAAgB,UAAA,gBAAAjB,GAAA,CAAAjB,gBAAA,CAAgC,sBAAAiB,GAAA,CAAAd,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}