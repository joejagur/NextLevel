{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/forms\";\nfunction CreateAccountComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-error\");\n  }\n}\nfunction CreateAccountComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-error\");\n  }\n}\nfunction CreateAccountComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-error\");\n  }\n}\nfunction CreateAccountComponent_h3_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \"Passwords do not match!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateAccountComponent_h3_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \"Passwords cannot be empty!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\nexport class CreateAccountComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.usernameFormControl = new FormControl('', [Validators.required]);\n    this.password1FormControl = new FormControl('', [Validators.required]);\n    this.password2FormControl = new FormControl('', [Validators.required]);\n    this.matcher = new MyErrorStateMatcher();\n    this.passwordsMatch = true;\n  }\n  createAccount(username, password1, password2) {\n    if (password1 != password2) {\n      this.passwordsMatch = false;\n    } else {}\n  }\n  static #_ = this.ɵfac = function CreateAccountComponent_Factory(t) {\n    return new (t || CreateAccountComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAccountComponent,\n    selectors: [[\"app-create-account\"]],\n    decls: 23,\n    vars: 12,\n    consts: [[1, \"login\"], [1, \"full-width\"], [\"matInput\", \"\", 3, \"formControl\", \"errorStateMatcher\"], [\"username\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", 3, \"formControl\", \"errorStateMatcher\"], [\"password1\", \"\"], [\"password2\", \"\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function CreateAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2, 3);\n        i0.ɵɵtemplate(6, CreateAccountComponent_mat_error_6_Template, 1, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 1)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5, 6);\n        i0.ɵɵtemplate(12, CreateAccountComponent_mat_error_12_Template, 1, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 1)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Re-Enter Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 5, 7);\n        i0.ɵɵtemplate(18, CreateAccountComponent_mat_error_18_Template, 1, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, CreateAccountComponent_h3_19_Template, 2, 0, \"h3\", 4);\n        i0.ɵɵtemplate(20, CreateAccountComponent_h3_20_Template, 2, 0, \"h3\", 4);\n        i0.ɵɵelementStart(21, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CreateAccountComponent_Template_button_click_21_listener() {\n          i0.ɵɵrestoreView(_r8);\n          const _r0 = i0.ɵɵreference(5);\n          const _r2 = i0.ɵɵreference(11);\n          const _r4 = i0.ɵɵreference(17);\n          return i0.ɵɵresetView(ctx.createAccount(_r0.value, _r2.value, _r4.value));\n        });\n        i0.ɵɵtext(22, \"Create Account\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(11);\n        const _r4 = i0.ɵɵreference(17);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.usernameFormControl)(\"errorStateMatcher\", ctx.matcher);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.usernameFormControl.hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.password1FormControl)(\"errorStateMatcher\", ctx.matcher);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.password1FormControl.hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.password2FormControl)(\"errorStateMatcher\", ctx.matcher);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.password2FormControl.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r2.value != _r4.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r2.value == \"\" || _r4.value == \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r2 == _r4 || _r2.value == \"\" || _r4.value == \"\");\n      }\n    },\n    dependencies: [i3.NgIf, i4.MatButton, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgForm, i7.FormControlDirective],\n    styles: [\".login[_ngcontent-%COMP%] {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n.full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtYWNjb3VudC9jcmVhdGUtYWNjb3VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0FBRUY7SUFDSSxXQUFXO0VBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4ge1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbi5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","MyErrorStateMatcher","isErrorState","control","form","isSubmitted","submitted","invalid","dirty","touched","CreateAccountComponent","constructor","userService","router","usernameFormControl","required","password1FormControl","password2FormControl","matcher","passwordsMatch","createAccount","username","password1","password2","_","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","consts","template","CreateAccountComponent_Template","rf","ctx","ɵɵtemplate","CreateAccountComponent_mat_error_6_Template","CreateAccountComponent_mat_error_12_Template","CreateAccountComponent_mat_error_18_Template","CreateAccountComponent_h3_19_Template","CreateAccountComponent_h3_20_Template","ɵɵlistener","CreateAccountComponent_Template_button_click_21_listener","ɵɵrestoreView","_r8","_r0","ɵɵreference","_r2","_r4","ɵɵresetView","value","ɵɵadvance","ɵɵproperty","hasError"],"sources":["C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\components\\create-account\\create-account.component.ts","C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\components\\create-account\\create-account.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css']\n})\n\nexport class CreateAccountComponent {\n  usernameFormControl = new FormControl('', [Validators.required]);\n  password1FormControl = new FormControl('', [Validators.required]);\n  password2FormControl = new FormControl('', [Validators.required]);\n  \n  matcher = new MyErrorStateMatcher();\n\n  passwordsMatch: boolean = true;\n  constructor(private userService: UserService, private router:Router){}\n\n  createAccount(username: string, password1: string, password2: string ) {\n    if(password1 != password2){\n      this.passwordsMatch = false;\n    }else{\n\n    }\n  }\n\n}\n","<form class=\"login\">\n    <mat-form-field class=\"full-width\">\n      <mat-label>Username</mat-label>\n      <input matInput [formControl]=\"usernameFormControl\" [errorStateMatcher]=\"matcher\" #username>\n      <mat-error *ngIf=\"!usernameFormControl.hasError('required') \"></mat-error>\n    </mat-form-field>\n  \n    <mat-form-field class=\"full-width\">\n      <mat-label>Password</mat-label>\n      <input matInput [formControl]=\"password1FormControl\" [errorStateMatcher]=\"matcher\" type=password #password1>\n      <mat-error *ngIf=\"!password1FormControl.hasError('required') \"></mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"full-width\">\n        <mat-label>Re-Enter Password</mat-label>\n        <input matInput [formControl]=\"password2FormControl\" [errorStateMatcher]=\"matcher\" type=password #password2>\n        <mat-error *ngIf=\"!password2FormControl.hasError('required') \"></mat-error>\n      </mat-form-field>\n      <h3 *ngIf=\"password1.value!=password2.value\">Passwords do not match!</h3>\n      <h3 *ngIf=\"password1.value=='' ||password2.value=='' \">Passwords cannot be empty!</h3>\n    <button mat-stroked-button [disabled]=\"password1==password2 || password1.value=='' || password2.value==''\" color=\"primary\" (click)=\"createAccount(username.value, password1.value, password2.value)\">Create Account</button>\n  </form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}