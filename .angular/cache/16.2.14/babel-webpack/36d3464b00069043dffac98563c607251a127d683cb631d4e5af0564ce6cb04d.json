{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.userURL = 'http://localhost:8080/user';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  createUser(newUser) {\n    const url = `${this.userURL}/`;\n    return this.http.post(url, {\n      \"username\": newUser.username,\n      \"password\": newUser.password\n    }, this.httpOptions).subscribe({\n      next: data => {\n        console.log(data);\n      },\n      error: error => {\n        switch (error.status) {\n          case 406:\n            {\n              return;\n            }\n        }\n      }\n    });\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      console.error(error);\n      return of(result);\n    };\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","of","UserService","constructor","http","userURL","httpOptions","headers","createUser","newUser","url","post","username","password","subscribe","next","data","console","log","error","status","handleError","operation","result","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, catchError, of } from 'rxjs';\r\nimport { User } from '../model/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private userURL ='http://localhost:8080/user'\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  createUser(newUser:User):Observable<User>{\r\n\r\n    const url = `${this.userURL}/`\r\n    return this.http.post<User>(url, {\"username\": newUser.username, \"password\":newUser.password}, this.httpOptions).subscribe({\r\n      next: (data) =>{\r\n        console.log(data);\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        switch(error.status){\r\n          case 406: {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAiCC,EAAE,QAAQ,MAAM;;;AAMjD,OAAM,MAAOC,WAAW;EAKtBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALN,KAAAC,OAAO,GAAE,4BAA4B;IAC7C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAGG;EAEJQ,UAAUA,CAACC,OAAY;IAErB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,GAAG;IAC9B,OAAO,IAAI,CAACD,IAAI,CAACO,IAAI,CAAOD,GAAG,EAAE;MAAC,UAAU,EAAED,OAAO,CAACG,QAAQ;MAAE,UAAU,EAACH,OAAO,CAACI;IAAQ,CAAC,EAAE,IAAI,CAACP,WAAW,CAAC,CAACQ,SAAS,CAAC;MACxHC,IAAI,EAAGC,IAAI,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC;MACDG,KAAK,EAAGA,KAAwB,IAAI;QAClC,QAAOA,KAAK,CAACC,MAAM;UACjB,KAAK,GAAG;YAAE;cACR;;;MAGN;KACD,CAAC;EACJ;EACQC,WAAWA,CAAIC,SAAS,GAAG,WAAW,EAAEC,MAAU;IACxD,OAAQJ,KAAU,IAAmB;MACnCF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACpB,OAAOlB,EAAE,CAACsB,MAAW,CAAC;IACxB,CAAC;EACH;EAAC,QAAAC,CAAA,G;qBA9BUtB,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX3B,WAAW;IAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}