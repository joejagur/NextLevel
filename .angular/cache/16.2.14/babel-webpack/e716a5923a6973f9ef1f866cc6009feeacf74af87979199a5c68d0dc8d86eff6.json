{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.userURL = 'http://localhost:8080/user';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  createUser(user) {\n    const url = `${this.userURL}`;\n    return this.http.post(url, user, this.httpOptions).pipe(tap(newUser => console.log(`New user with id=\"${newUser.id}`)));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      console.error(error);\n      return of(result);\n    };\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","of","UserService","constructor","http","userURL","httpOptions","headers","createUser","user","url","post","pipe","tap","newUser","console","log","id","handleError","operation","result","error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, catchError, of } from 'rxjs';\r\nimport { User } from '../model/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private userURL ='http://localhost:8080/user'\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  createUser(user:User):Observable<User>{\r\n\r\n    const url = `${this.userURL}`\r\n    return this.http.post<User>(url, user, this.httpOptions).pipe(\r\n        tap((newUser: User) => console.log(`New user with id=\"${newUser.id}`)),\r\n    );\r\n  }\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAiCC,EAAE,QAAQ,MAAM;;;AAMjD,OAAM,MAAOC,WAAW;EAKtBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALN,KAAAC,OAAO,GAAE,4BAA4B;IAC7C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAGG;EAEJQ,UAAUA,CAACC,IAAS;IAElB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,EAAE;IAC7B,OAAO,IAAI,CAACD,IAAI,CAACO,IAAI,CAAOD,GAAG,EAAED,IAAI,EAAE,IAAI,CAACH,WAAW,CAAC,CAACM,IAAI,CACzDC,GAAG,CAAEC,OAAa,IAAKC,OAAO,CAACC,GAAG,CAAC,qBAAqBF,OAAO,CAACG,EAAE,EAAE,CAAC,CAAC,CACzE;EACH;EACQC,WAAWA,CAAIC,SAAS,GAAG,WAAW,EAAEC,MAAU;IACxD,OAAQC,KAAU,IAAmB;MACnCN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;MACpB,OAAOpB,EAAE,CAACmB,MAAW,CAAC;IACxB,CAAC;EACH;EAAC,QAAAE,CAAA,G;qBArBUpB,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXzB,WAAW;IAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}