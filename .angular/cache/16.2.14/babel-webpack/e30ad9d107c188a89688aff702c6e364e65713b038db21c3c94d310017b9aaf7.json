{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n  }\n  login(username, password) {\n    this.username = username;\n    this.password = password;\n    this.userService.getUser({\n      username: this.username,\n      password: this.password\n    }).subscribe({\n      next: user => {\n        if (user) {\n          localStorage.setItem(\"user\", JSON.stringify(this.user));\n          this.router.navigate(['/home']);\n        }\n      },\n      error: error => {\n        switch (error.status) {\n          case 406:\n            {\n              alert(\"Password Not Correct!\");\n              break;\n            }\n          case 404:\n            {\n              alert(\"Username Not Found!\");\n              break;\n            }\n        }\n      }\n    });\n  }\n  moveToCreateAccountPage() {\n    this.router.navigate(['/new']);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 0,\n    consts: [[1, \"login\"], [1, \"full-width\"], [\"matInput\", \"\"], [\"username\", \"\"], [\"matInput\", \"\", \"type\", \"password\"], [\"password\", \"\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2, 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\", 1)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4, 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_11_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(5);\n          const _r1 = i0.ɵɵreference(10);\n          return i0.ɵɵresetView(ctx.login(_r0.value, _r1.value));\n        });\n        i0.ɵɵtext(12, \"Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n          return ctx.moveToCreateAccountPage();\n        });\n        i0.ɵɵtext(15, \"Create Account\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i3.MatButton, i4.MatInput, i5.MatFormField, i5.MatLabel, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm],\n    styles: [\".login[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLHNCQUFzQjtFQUN0QixZQUFZO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","userService","router","login","username","password","getUser","subscribe","next","user","localStorage","setItem","JSON","stringify","navigate","error","status","alert","moveToCreateAccountPage","_","i0","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginComponent_Template_button_click_11_listener","ɵɵrestoreView","_r2","_r0","ɵɵreference","_r1","ɵɵresetView","value","LoginComponent_Template_button_click_14_listener"],"sources":["C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\components\\login\\login.component.ts","C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/model/User';\n\nimport { UserService } from 'src/app/services/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  username: string;\n  password: string;\n  user?: User;\n  constructor(private userService: UserService, private router:Router){}\n\n\nlogin(username: string, password: string) {\n  this.username = username;\n  this.password = password;\n  this.userService.getUser({username:this.username, password: this.password} as User).subscribe({\n    next: (user) => {\n      if(user) {\n        localStorage.setItem(\"user\", JSON.stringify(this.user));\n        this.router.navigate(['/home']);\n      }\n    },\n    error: (error: HttpErrorResponse) => {\n      switch(error.status){\n        case 406: {\n          alert(\"Password Not Correct!\");\n          break;\n        }\n        case 404: {\n          alert(\"Username Not Found!\");\n          break;\n        }\n      }\n    }\n  }\n  )\n  \n}\n\nmoveToCreateAccountPage() {\n  this.router.navigate(['/new'])\n  }\n}\n","<form class=\"login\">\n    <mat-form-field class=\"full-width\">\n      <mat-label>Username</mat-label>\n      <input matInput #username>\n    </mat-form-field>\n  \n    <mat-form-field class=\"full-width\">\n      <mat-label>Password</mat-label>\n      <input matInput type=password #password>\n    </mat-form-field>\n    <button mat-stroked-button color=\"primary\" (click)=\"login(username.value, password.value)\">Login </button><br>\n    <button mat-stroked-button color=\"primary\" (click)=\"moveToCreateAccountPage()\">Create Account</button>\n    \n  </form>"],"mappings":";;;;;;;AAWA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,MAAa;IAA/C,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAS;EAGvEC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACJ,WAAW,CAACK,OAAO,CAAC;MAACF,QAAQ,EAAC,IAAI,CAACA,QAAQ;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAS,CAAC,CAACE,SAAS,CAAC;MAC5FC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAGA,IAAI,EAAE;UACPC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,IAAI,CAAC,CAAC;UACvD,IAAI,CAACP,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;MAEnC,CAAC;MACDC,KAAK,EAAGA,KAAwB,IAAI;QAClC,QAAOA,KAAK,CAACC,MAAM;UACjB,KAAK,GAAG;YAAE;cACRC,KAAK,CAAC,uBAAuB,CAAC;cAC9B;;UAEF,KAAK,GAAG;YAAE;cACRA,KAAK,CAAC,qBAAqB,CAAC;cAC5B;;;MAGN;KACD,CACA;EAEH;EAEAC,uBAAuBA,CAAA;IACrB,IAAI,CAAChB,MAAM,CAACY,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;EAC9B;EAAC,QAAAK,CAAA,G;qBArCUpB,cAAc,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd3B,cAAc;IAAA4B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCX3Bb,EAAA,CAAAe,cAAA,cAAoB;QAEHf,EAAA,CAAAgB,MAAA,eAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAY;QAC/BjB,EAAA,CAAAkB,SAAA,kBAA0B;QAC5BlB,EAAA,CAAAiB,YAAA,EAAiB;QAEjBjB,EAAA,CAAAe,cAAA,wBAAmC;QACtBf,EAAA,CAAAgB,MAAA,eAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAY;QAC/BjB,EAAA,CAAAkB,SAAA,kBAAwC;QAC1ClB,EAAA,CAAAiB,YAAA,EAAiB;QACjBjB,EAAA,CAAAe,cAAA,iBAA2F;QAAhDf,EAAA,CAAAmB,UAAA,mBAAAC,iDAAA;UAAApB,EAAA,CAAAqB,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAvB,EAAA,CAAAwB,WAAA;UAAA,MAAAC,GAAA,GAAAzB,EAAA,CAAAwB,WAAA;UAAA,OAASxB,EAAA,CAAA0B,WAAA,CAAAZ,GAAA,CAAA/B,KAAA,CAAAwC,GAAA,CAAAI,KAAA,EAAAF,GAAA,CAAAE,KAAA,CAAqC;QAAA,EAAC;QAAC3B,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAAAjB,EAAA,CAAAkB,SAAA,UAAI;QAC9GlB,EAAA,CAAAe,cAAA,iBAA+E;QAApCf,EAAA,CAAAmB,UAAA,mBAAAS,iDAAA;UAAA,OAASd,GAAA,CAAAhB,uBAAA,EAAyB;QAAA,EAAC;QAACE,EAAA,CAAAgB,MAAA,sBAAc;QAAAhB,EAAA,CAAAiB,YAAA,EAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}