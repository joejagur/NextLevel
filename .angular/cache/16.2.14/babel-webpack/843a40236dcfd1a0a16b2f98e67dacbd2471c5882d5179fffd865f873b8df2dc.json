{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/tooltip\";\nfunction CreateAccountComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-error\");\n  }\n}\nfunction CreateAccountComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-error\");\n  }\n}\nfunction CreateAccountComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-error\");\n  }\n}\nfunction CreateAccountComponent_h3_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \"Passwords do not match!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\nexport class CreateAccountComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.username = \"\";\n    this.password = \"\";\n    this.usernameFormControl = new FormControl('', [Validators.required]);\n    this.password1FormControl = new FormControl('', [Validators.required]);\n    this.password2FormControl = new FormControl('', [Validators.required]);\n    this.matcher = new MyErrorStateMatcher();\n    this.passwordsMatch = true;\n  }\n  createAccount(username, password) {\n    this.userService.createUser({\n      username: this.username,\n      password1: this.password\n    }).subscribe(newUser => {\n      if (newUser) {\n        this.router.navigate(['/login']);\n      } else {\n        alert(\"Username already exist!\");\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CreateAccountComponent_Factory(t) {\n    return new (t || CreateAccountComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAccountComponent,\n    selectors: [[\"app-create-account\"]],\n    decls: 24,\n    vars: 12,\n    consts: [[\"fxFlexFill\", \"\", \"fxLayoutAlign\", \"center center\"], [1, \"login\"], [1, \"full-width\"], [\"matInput\", \"\", 3, \"formControl\", \"errorStateMatcher\"], [\"username\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", 3, \"formControl\", \"errorStateMatcher\"], [\"password1\", \"\"], [\"password2\", \"\"], [\"matTooltip\", \"Passwords cannot be empty!\", 3, \"matTooltipDisabled\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function CreateAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3, 4);\n        i0.ɵɵtemplate(7, CreateAccountComponent_mat_error_7_Template, 1, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6, 7);\n        i0.ɵɵtemplate(13, CreateAccountComponent_mat_error_13_Template, 1, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 2)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Re-Enter Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 6, 8);\n        i0.ɵɵtemplate(19, CreateAccountComponent_mat_error_19_Template, 1, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, CreateAccountComponent_h3_20_Template, 2, 0, \"h3\", 5);\n        i0.ɵɵelementStart(21, \"div\", 9)(22, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function CreateAccountComponent_Template_button_click_22_listener() {\n          i0.ɵɵrestoreView(_r7);\n          const _r0 = i0.ɵɵreference(6);\n          const _r2 = i0.ɵɵreference(12);\n          const _r4 = i0.ɵɵreference(18);\n          return i0.ɵɵresetView(ctx.createAccount(_r0.value, _r2.value, _r4.value));\n        });\n        i0.ɵɵtext(23, \" Create Account\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(12);\n        const _r4 = i0.ɵɵreference(18);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.usernameFormControl)(\"errorStateMatcher\", ctx.matcher);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.usernameFormControl.hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.password1FormControl)(\"errorStateMatcher\", ctx.matcher);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.password1FormControl.hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.password2FormControl)(\"errorStateMatcher\", ctx.matcher);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.password2FormControl.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r2.value != _r4.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matTooltipDisabled\", !(_r2.value == \"\" || _r4.value == \"\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r2 == _r4 || _r2.value == \"\" || _r4.value == \"\");\n      }\n    },\n    dependencies: [i3.NgIf, i4.MatButton, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgForm, i7.FormControlDirective, i8.MatTooltip],\n    styles: [\".login[_ngcontent-%COMP%] {\\n    width: 100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    flex-direction: column;\\n    height: 100%;\\n  }\\n  \\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtYWNjb3VudC9jcmVhdGUtYWNjb3VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixZQUFZO0VBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","MyErrorStateMatcher","isErrorState","control","form","isSubmitted","submitted","invalid","dirty","touched","CreateAccountComponent","constructor","userService","router","username","password","usernameFormControl","required","password1FormControl","password2FormControl","matcher","passwordsMatch","createAccount","createUser","password1","subscribe","newUser","navigate","alert","_","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","consts","template","CreateAccountComponent_Template","rf","ctx","ɵɵtemplate","CreateAccountComponent_mat_error_7_Template","CreateAccountComponent_mat_error_13_Template","CreateAccountComponent_mat_error_19_Template","CreateAccountComponent_h3_20_Template","ɵɵlistener","CreateAccountComponent_Template_button_click_22_listener","ɵɵrestoreView","_r7","_r0","ɵɵreference","_r2","_r4","ɵɵresetView","value","ɵɵadvance","ɵɵproperty","hasError"],"sources":["C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\components\\create-account\\create-account.component.ts","C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\components\\create-account\\create-account.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport {MatTooltip} from '@angular/material/tooltip';\n\nimport { User } from 'src/app/model/User';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css']\n})\n\nexport class CreateAccountComponent {\n\n  username: string = \"\"\n  password: string = \"\"\n  usernameFormControl = new FormControl('', [Validators.required]);\n  password1FormControl = new FormControl('', [Validators.required]);\n  password2FormControl = new FormControl('', [Validators.required]);\n  \n  matcher = new MyErrorStateMatcher();\n\n  passwordsMatch: boolean = true;\n  constructor(private userService: UserService, private router:Router){}\n\n  createAccount(username: string, password: string ) {\n    this.userService.createUser({username:this.username, password1:this.password} as User).subscribe(\n      (newUser) =>{\n        if(newUser){\n          this.router.navigate(['/login']);\n        }else{\n          alert(\"Username already exist!\");\n        }\n      }\n    )\n  }\n\n}\n","<div fxFlexFill fxLayoutAlign=\"center center\"><form class=\"login\">\n    <mat-form-field class=\"full-width\">\n      <mat-label>Username</mat-label>\n      <input matInput [formControl]=\"usernameFormControl\" [errorStateMatcher]=\"matcher\" #username>\n      <mat-error *ngIf=\"!usernameFormControl.hasError('required') \"></mat-error>\n    </mat-form-field>\n  \n    <mat-form-field class=\"full-width\">\n      <mat-label>Password</mat-label>\n      <input matInput [formControl]=\"password1FormControl\" [errorStateMatcher]=\"matcher\" type=password #password1>\n      <mat-error *ngIf=\"!password1FormControl.hasError('required') \"></mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"full-width\">\n        <mat-label>Re-Enter Password</mat-label>\n        <input matInput [formControl]=\"password2FormControl\" [errorStateMatcher]=\"matcher\" type=password #password2>\n        <mat-error *ngIf=\"!password2FormControl.hasError('required') \"></mat-error>\n      </mat-form-field>\n      <h3 *ngIf=\"password1.value!=password2.value\">Passwords do not match!</h3>\n      <div matTooltip=\"Passwords cannot be empty!\" [matTooltipDisabled]=\"!(password1.value=='' || password2.value=='')\">\n    <button mat-raised-button [disabled]=\"password1==password2 || password1.value=='' || password2.value==''\" \n            color=\"primary\" (click)=\"createAccount(username.value, password1.value, password2.value)\">\n            Create Account</button>\n    </div>\n  </form>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}