{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GameService {\n  constructor(http) {\n    this.http = http;\n    this.gameURL = 'http://localhost:8080/games';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  searchGame(title) {\n    if (!title.trim()) {\n      return of([]);\n    }\n    const url = `${this.gameURL}/searchByTitle/${title}`;\n    console.log(this.http.get(url));\n    return this.http.get(url).pipe(catchError(this.handleError('games')));\n  }\n  static #_ = this.ɵfac = function GameService_Factory(t) {\n    return new (t || GameService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GameService,\n    factory: GameService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","of","GameService","constructor","http","gameURL","httpOptions","headers","searchGame","title","trim","url","console","log","get","pipe","handleError","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\joegu\\Documents\\QuestLog\\questLog\\src\\app\\services\\game.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, catchError, of } from 'rxjs';\nimport { Games } from '../model/Games';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n  private gameURL ='http://localhost:8080/games'\n  games: Observable<Games[]> | undefined;\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  searchGame(title:string):Observable<Game>{\n    if(!title.trim()){\n      return of([])\n    }\n\n    const url = `${this.gameURL}/searchByTitle/${title}`\n    console.log(this.http.get<Game>(url))\n    return this.http.get<Games[]>(url).pipe(\n      catchError(this.handleError<Games>('games'))\n    )\n  }\n}\n\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,UAAU,EAAEC,EAAE,QAAQ,MAAM;;;AAMjD,OAAM,MAAOC,WAAW;EAMtBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANN,KAAAC,OAAO,GAAE,6BAA6B;IAE9C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIR,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAGG;EAEJS,UAAUA,CAACC,KAAY;IACrB,IAAG,CAACA,KAAK,CAACC,IAAI,EAAE,EAAC;MACf,OAAOT,EAAE,CAAC,EAAE,CAAC;;IAGf,MAAMU,GAAG,GAAG,GAAG,IAAI,CAACN,OAAO,kBAAkBI,KAAK,EAAE;IACpDG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,IAAI,CAACU,GAAG,CAAOH,GAAG,CAAC,CAAC;IACrC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAUH,GAAG,CAAC,CAACI,IAAI,CACrCf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAQ,OAAO,CAAC,CAAC,CAC7C;EACH;EAAC,QAAAC,CAAA,G;qBApBUf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}